#version 400 core

in vec3 textureCoords;

out vec4 out_Color;

uniform samplerCube cubeMap1;
uniform samplerCube cubeMap2;
uniform float blendFactor;
uniform vec3 fogColour;

const float limitLower = 0.0;
const float limitUpper = 30.0;

void main(void) {

    vec4 texture1 = texture(cubeMap1, textureCoords);
    vec4 texture2 = texture(cubeMap2, textureCoords);
    vec4 finalColour = mix(texture1, texture2, blendFactor);

    float visibility = (textureCoords.y - limitLower) / (limitUpper - limitLower);
    out_Color = mix(vec4(fogColour, 1.0), finalColour, clamp(visibility, 0.0, 1.0));

}